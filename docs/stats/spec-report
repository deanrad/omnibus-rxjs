Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
PASS test/3rd-party.spec.ts
  Reference: FSA
    ✓ creates an action
    ✓ provides a predicate #match
  Reference: RxJS
    Observable subscriptions
      ✓ can deliver events synchronously
      ✓ can deliver events with Promise
      ✓ can deliver events with setTimeout(0)

PASS test/after.spec.ts
  after
    ✓ is an Observable
    ✓ is awaitable
    ✓ is thenable
    delay arg
      when 0
        ✓ is synchronous
    value arg
      when a value
        ✓ is returned
      when a function
        ✓ schedules its execution later
        ✓ returns its return value
      when an Observable
        ✓ defers subscription
        ✓ yields the value

PASS test/bus.spec.ts
  Bus
    ✓ can be instantiated with the BusItemType it will accept
    Typings
      ✓ types - can make more actions
    #query
      With a Predicate
        ✓ Returns an Observable of matching events
        ✓ Returns an Observable of filtered events
        ✓ is canceled by a reset
        Type safety
          ✓ Returns a typed Observable of filtered events
    #nextEvent
      With a Predicate
        ✓ resolves to the next matching event
        ✓ rejects on a reset if it hasnt triggered yet
        ✓ ignores a reset if it has triggered already
    #trigger
      ✓ puts an action on the bus
      ✓ Is not vulnerable to listener errors
      Type Safety
        ✓ typechecks argument against bus type
    #listen
      Handler
        Returning Observables
          retriggering via observeWith
            ✓ can send events from effects back through the bus
          retrigging via observeAll
            ✓ puts all return values
        Returning Promises
          With a callback-based observer
            ✓ can trigger new events
        Returning functions
          ✓ can return 0-arity function to call defer()
          ✓ can return 1-arity function to create Observable via new Observable()
        Can return any ObservableInput
          ✓ Unpacks strings since theyre Iterable
          ✓ Works with generators
          ✓ allows for no/void return value
      Observer
        ✎ todo contains callbacks attached to the handler lifecycle
    #listenQueueing
      ✓ serializes execution
    #listenSwitching
      ✓ cancels existing, and starts a new Subscription
    #listenBlocking
      ✓ cancels existing, and starts a new Subscription
    #listen #trigger #trigger
      handlers which error
        Not rescued
          ✓ does not continue listening
        Rescued
          ✓ continues listening
    #reset
      ✓ ends all listeners
      ✓ ends all handlers
    #spy
      ✓ calls the function passed to it on any event, before any listener
      ✓ returns a subscription for cancelation
      #spy #spy
        ✓ runs spies in the order appended
    #guard
      ✎ todo returns a subscription for cancelation
      callback
        ✎ todo is called on matching events
        when it throws
          ✓ allows rejection of bus items by throwing
          ✓ doesnt terminate the guard when throwing
        return value
          ✓ can mutate the payload
      #guard #guard
        ✓ runs guards in the order created
      #spy #guard
        ✓ runs guards before any spies
    #filter
      ✎ todo returns a subscription for cancelation
      callback
        ✓ may replace the action with another, after guards and before spies
  Robust Error Handling
    Errors dont stop triggering, kill the listener, allow other listeners
      ✓ empty observable
      ✓ syncError observable
      ✓ resolvedPromise observable
      ✓ rejectedPromise observable
      ✓ endpointValue observable
      ✓ timeout observable
      ✓ endpointError observable
      ✓ dyingStream observable
      ✓ endpointStream observable
      ✓ valueStream observable

PASS test/utils.spec.ts
  Bus
    ✓ can be instantiated with the BusItemType it will accept
    Typings
      ✓ types - can make more actions
    #query
      With a Predicate
        ✓ Returns an Observable of matching events
        ✓ Returns an Observable of filtered events
        ✓ is canceled by a reset
        Type safety
          ✓ Returns a typed Observable of filtered events
    #nextEvent
      With a Predicate
        ✓ resolves to the next matching event
        ✓ rejects on a reset if it hasnt triggered yet
        ✓ ignores a reset if it has triggered already
    #trigger
      ✓ puts an action on the bus
      ✓ Is not vulnerable to listener errors
      Type Safety
        ✓ typechecks argument against bus type
    #listen
      Handler
        Returning Observables
          retriggering via observeWith
            ✓ can send events from effects back through the bus
          retrigging via observeAll
            ✓ puts all return values
        Returning Promises
          With a callback-based observer
            ✓ can trigger new events
        Returning functions
          ✓ can return 0-arity function to call defer()
          ✓ can return 1-arity function to create Observable via new Observable()
        Can return any ObservableInput
          ✓ Unpacks strings since theyre Iterable
          ✓ Works with generators
          ✓ allows for no/void return value
      Observer
        ✎ todo contains callbacks attached to the handler lifecycle
    #listenQueueing
      ✓ serializes execution
    #listenSwitching
      ✓ cancels existing, and starts a new Subscription
    #listenBlocking
      ✓ cancels existing, and starts a new Subscription
    #listen #trigger #trigger
      handlers which error
        Not rescued
          ✓ does not continue listening
        Rescued
          ✓ continues listening
    #reset
      ✓ ends all listeners
      ✓ ends all handlers
    #spy
      ✓ calls the function passed to it on any event, before any listener
      ✓ returns a subscription for cancelation
      #spy #spy
        ✓ runs spies in the order appended
    #guard
      ✎ todo returns a subscription for cancelation
      callback
        ✎ todo is called on matching events
        when it throws
          ✓ allows rejection of bus items by throwing
          ✓ doesnt terminate the guard when throwing
        return value
          ✓ can mutate the payload
      #guard #guard
        ✓ runs guards in the order created
      #spy #guard
        ✓ runs guards before any spies
    #filter
      ✎ todo returns a subscription for cancelation
      callback
        ✓ may replace the action with another, after guards and before spies
  Robust Error Handling
    Errors dont stop triggering, kill the listener, allow other listeners
      ✓ empty observable
      ✓ syncError observable
      ✓ resolvedPromise observable
      ✓ rejectedPromise observable
      ✓ endpointValue observable
      ✓ timeout observable
      ✓ endpointError observable
      ✓ dyingStream observable
      ✓ endpointStream observable
      ✓ valueStream observable
  TestDurations
    ✓ Sync
    ✓ Promise
    ✓ Timeout
  TestObservbles
    ✓ VC - a synchronous value and completion
    ✓ tVC - a promise resolved after a tick
    ✓ tE - a rejected Promise
    ✓ TV - a value after a timeout
    ✓ VVC - a mutivalued sync iterable
    Awaitable intervals of time
      ✓ tests ok
  observableFromPromisedArray
    ✓ flattens a Promise for an array to an Observable of its items

Test Suites: 4 passed, 4 total
Tests:       8 todo, 116 passed, 124 total
Snapshots:   19 passed, 19 total
Time:        8.528 s
Ran all test suites.
